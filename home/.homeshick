#!/usr/bin/env bash


repos="$HOME/.homesick/repos"

homeshick="$repos/homeshick"
# It's either this^ or the one below:
# scriptdir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
# The install script however symlinks us. So $0 changes.

source $homeshick/utils/log.sh
source $homeshick/utils/fs.sh
source $homeshick/utils/git.sh
source $homeshick/utils/help.sh



test -x `which git` || die "       $bldred git not found in path $txtdef "

mkdir -p "$repos"

for arg; do
	delim=""
	case "$arg" in
		clone)    args="${args}-c " ;;
		generate) args="${args}-g " ;;
		list)     args="${args}-l " ;;
		updates)  args="${args}-u " ;;
		pull)     args="${args}-p " ;;
		symlink)  args="${args}-s " ;;
		track)    args="${args}-t " ;;
		
		help)     extend_help $2
		          exit 0            ;;
		--help)   extend_help
		          exit 0            ;;
		--quiet)  args="${args}-q " ;;
		--skip)   args="${args}-i " ;;
		--force)  args="${args}-f " ;;
		
		# pass through anything else
		*) [[ "${arg:0:1}" == "-" ]] || delim="\""
		   args="${args}${delim}${arg}${delim} ";;
	esac
done

# reset the translated args
eval set -- $args
# now we can process with getopt

while getopts "c:g:lup:s:t:qifh" opt; do
	case $opt in
		c) clone $OPTARG       ;;
		g) generate $OPTARG    ;;
		u) updates             ;;
		l) list                ;;
		p) pull $OPTARG        ;;
		s) symlink $OPTARG     ;;
		t) shift $(( OPTIND - 1 ))
		   track $OPTARG $1    ;;
		q) B_QUIET=1           ;;
		i) B_SKIP=1            ;;
		f) B_FORCE=1           ;;
		e) extend_help $OPTARG ;;
		h) extend_help
		   exit 0              ;;
		* ) die "Could not find task \"$opt\"."
		   exit 1              ;;
	esac
done
